Query:intermediate languages used in construction of multi-targeted compilers tcoll

Document:CACM-2061

an algorithm for the CONSTRUCTION OF bounded-context parsers 
CONSTRUCTION, syntactical analyzer CONSTRUCTION, generators, compiler 
COMPILERS, compiler writing systems, translator writing systems metacompilers, 
context-free grammars, formal LANGUAGES, pushdown automata 
*********************************************************************
Document:CACM-2112

context-free LANGUAGES. a formal procedure is given for deriving from 
expression, context-free LANGUAGES, translation, recognizers, 
directed COMPILERS, finite state automata 
translation equations 
*********************************************************************
Document:CACM-2411

IN COMPILERS, program documentation, program flow graphs, 
semantics OF programming LANGUAGES, structured programming. 
tree-structured programs 
*********************************************************************
Document:CACM-2579

register allocation, COMPILERS, programming 
LANGUAGES, virtual memory, demand paging 
register allocation via usage counts 
*********************************************************************
Document:CACM-1496

a formal semantics for computer LANGUAGES 
a large class OF computer LANGUAGES. this meta-language 
has been the basis for CONSTRUCTION OF an efficient, 
and its application IN a compiler-compiler 
*********************************************************************
Document:CACM-0799

to the CONSTRUCTION OF algol COMPILERS. 
design OF a separable transition-diagram compiler* 
a cobol compiler design is presented which is 
*********************************************************************
Document:CACM-0205

macro instruction extensions OF compiler LANGUAGES 
macroinstruction COMPILERS constructed from 
a small set OF functions can be made extremely 
*********************************************************************
Document:CACM-0252

INTERMEDIATE and final results. 
programming a duplex computer system 
this paper describes a method OF duplex-computer 
*********************************************************************
Document:CACM-1723

computer CONSTRUCTION OF project networks 
ordering, network CONSTRUCTION by computer 
project networks are USED IN pert and cpm. 
*********************************************************************
Document:CACM-2921

describe the syntax OF programming LANGUAGES more 
syntax diagrams,lr(k) grammars, parser CONSTRUCTION, 
parsing, programming LANGUAGES, language generation, 
formal definition, COMPILERS, translators, scanners 
*********************************************************************
Document:CACM-1565

sydney, australia, to process text for eight different COMPILERS. 
a language-independent macro processor 
a macro processor is described which can be 
*********************************************************************
Document:CACM-0637

COMPILERS with COMPILERS"; indeed, it pointed out many advantages 
a neliac-generated 7090-1401 compiler 
neliac systems for several different machines 
*********************************************************************
Document:CACM-2939

the use OF abstractions IN program CONSTRUCTION. 
LANGUAGES, through the procedure or subroutine. 
kinds OF abstractions IN program CONSTRUCTION 
programming LANGUAGES, data types, data abstractions, 
*********************************************************************
Document:CACM-0929

glossary CONSTRUCTION 
cacm february, 1963 
grems, m. 
*********************************************************************
Document:CACM-3115

to two INTERMEDIATE vectors. these vectors are mapped into 
INTERMEDIATE vectors to the matrices. the mapping 
orderly enumeration OF nonsingular binary 
matrices applied to text encryption 
*********************************************************************
Document:CACM-1787

COMPILERS, operates with a pushdown stack and with 
use OF transition matrices IN compiling 
an algorithms is described which constructs 
*********************************************************************
Document:CACM-3093

programming LANGUAGES, error correction, automatic 
correction, parsing, lr, syntax errors, COMPILERS 
automatic error recovery for lr parsers 
*********************************************************************
Document:CACM-0100

recursive subscripting COMPILERS and list-types memories 
cacm february, 1959 
carr iii, j. w. 
*********************************************************************
Document:CACM-3102

incorporation OF units into programming LANGUAGES 
units, language design, compiler CONSTRUCTION, language syntax 
the issues OF how a programming language might 
*********************************************************************
Document:CACM-2886

use for the definition OF programming LANGUAGES 
and COMPILERS; a formal definition OF attribute grammars 
attribute grammars, semantics OF programming LANGUAGES, 
multipass COMPILERS, semantic evaluation, semantic conditions 
*********************************************************************
Document:CACM-2551

mutual recursion IN algol 60 using restricted COMPILERS 
cacm january, 1973 
atkins,m. s. 
*********************************************************************
Document:CACM-3099

useful for the CONSTRUCTION OF difficult integer 
problem CONSTRUCTION, kuhn-tucker conditions, 
new sufficient optimality conditions for 
integer programming and their application 
*********************************************************************
Document:CACM-2558

protection IN programming LANGUAGES 
linguistic mechanisms which can be USED to protect 
one subprogram from another's malfunctioning 
*********************************************************************
Document:CACM-2658

IN algol 60 using restricted COMPILERS 
an alternative approach to mutual recursion 
cacm april, 1974 
*********************************************************************
Document:CACM-1852

bootstrapping, OF processors for programming LANGUAGES is 
programming LANGUAGES whose implementation is based 
programming LANGUAGES, implementation techniques 
a base for a mobile programming system 
*********************************************************************
Document:CACM-1387

growth IN the INTERMEDIATE equations and the hazards 
solution OF systems OF polynomial equations by elimination 
the elimination procedure as described by williams 
*********************************************************************
Document:CACM-1788

toward a general processor for programming LANGUAGES 
language than by the CONSTRUCTION OF a whole new compiler, 
lie IN compiler CONSTRUCTION. 
*********************************************************************
Document:CACM-1835

LANGUAGES programming LANGUAGES, student programming 
the iitran programming language 
the iitran language, developed to be USED 
*********************************************************************
Document:CACM-2897

a case study OF a new code generation technique for COMPILERS 
have allowed a new design for COMPILERS to emerge. 
recent developments IN optimizing techniques 
*********************************************************************
Document:CACM-1223

scan an INTERMEDIATE language produced by the preceding 
is applicable to most algebraic LANGUAGES. 
high speed compilation OF efficient object code 
*********************************************************************
Document:CACM-3030

recognized as helpful IN the CONSTRUCTION OF 
programming LANGUAGES that ease hierarchical 
an example OF hierarchical design and proof 
*********************************************************************
Document:CACM-2684

OF the syntax OF programming LANGUAGES has been 
to define abstract syntax and translations between LANGUAGES, 
COMPILERS, formal definition, pl/i standards 
production systems: or can we do better than bnf? 
*********************************************************************
Document:CACM-0249

specification LANGUAGES for mechanical LANGUAGES 
and their processors*-a baker's dozen 
cacm december, 1961 
*********************************************************************
Document:CACM-2495

arithmetic expressions, code generation, COMPILERS, 
adapting optimal code generation for arithmetic 
expressions to the instruction sets available 
on present-day computers 
*********************************************************************
Document:CACM-3130

elementary level topics and courses, and INTERMEDIATE level courses. 
curriculum '78 - recommendations for the 
undergraduate program IN computer science 
*********************************************************************
Document:CACM-1313

CONSTRUCTION OF nonlinear programming test problems 
cacm february, 1965 
rosen, j. b. 
*********************************************************************
Document:CACM-0077

on gat and the CONSTRUCTION OF translators 
cacm july, 1959 
arden, b. 
*********************************************************************
Document:CACM-2867

USED IN the CONSTRUCTION OF a family OF operating 
modularization and hierarchy IN a family OF operating systems 
this paper describes the design philosophy 
*********************************************************************
Document:CACM-1402

OF obtaining functional values at points INTERMEDIATE 
partial step integration 
a partial step integration equation is derived 
*********************************************************************
Document:CACM-1533

IN one OF its COMPILERS. further applications OF 
a marovian model OF the university OF michigan executive system 
a mathematical model OF a computer's executive 
*********************************************************************
Document:CACM-0051

on the CONSTRUCTION OF micro-flowcharts 
cacm october, 1959 
gorn, s. 
*********************************************************************
Document:CACM-3171

to be USED for implementations OF high level LANGUAGES. under suitable 
line numbers made cheap 
a technique is described for run-time line number administration 
*********************************************************************
Document:CACM-2587

on the CONSTRUCTION OF a representative synthetic workload (errata) 
cacm october, 1974 
sreenivarsan, k. 
*********************************************************************
Document:CACM-1807

COMPILERS that have proved to produce excellent object 
fortran, optimization, expressions, COMPILERS, 
optimization OF expressions IN fortran 
*********************************************************************
Document:CACM-1947

COMPILERS, data flow analysis, dominance, efficiency, 
object code optimization 
methods OF analyzing the control flow and data 
*********************************************************************
Document:CACM-3105

paper shows how to extend programming LANGUAGES 
LANGUAGES that support the notion OF abstract data 
programming LANGUAGES, access control, data types, 
a language extension for expressing constraints on data access 
*********************************************************************
Document:CACM-0303

mechanical LANGUAGES and their processors 
some basic terminology connected with 
the suggestions IN this paper are part OF the 
*********************************************************************
Document:CACM-1138

formalism IN programming languages* 
cacm february, 1964 
iverson, k. e. 
*********************************************************************
Document:CACM-2066

an algol CONSTRUCTION for procedures as parameters OF procedures 
cacm april, 1970 
knight, k. r. 
*********************************************************************
Document:CACM-1029

function, by introduction OF INTERMEDIATE variables, 
a simple automatic derivative evaluation program 
a procedure for automatic evaluation OF total/partial 
*********************************************************************
Document:CACM-2603

LANGUAGES and deterministic LANGUAGES 
the class OF reducing transition LANGUAGES 
simple precedence LANGUAGES. IN this paper this 
context free LANGUAGES. 
*********************************************************************
Document:CACM-2534

that COMPILERS can provide better diagnostic 
COMPILERS, debugging, pl/i, programming LANGUAGES 
design and implementation OF a diagnostic compiler for pl/i 
*********************************************************************
Document:CACM-0463

on ambiguity IN phrase structure LANGUAGES 
cacm october, 1962 
floyd, r. w. 
*********************************************************************
Document:CACM-2316

programming LANGUAGES: history and future 
showing the chronological development OF LANGUAGES and their 
OF 1972. key concepts other than specific LANGUAGES are discussed. 
programming LANGUAGES, higher level LANGUAGES, 
*********************************************************************
Document:CACM-2659

qualified references, COMPILERS 
some remarks on lookup OF structured variables 
cacm april, 1974 
*********************************************************************
Document:CACM-1457

the characteristics OF various processing LANGUAGES are 
implementation. advantages OF these programming LANGUAGES 
data manipulation and programming problems 
IN automatic information retrieval 
*********************************************************************
Document:CACM-1484

standard programming LANGUAGES for the description OF 
a language for describing the functions OF synchronous systems* 
before the design OF a system is started, the 
*********************************************************************
Document:CACM-1783

many significant digits are needed IN the INTERMEDIATE 
in-and-out conversions 
byan in-and-out conversion we mean that a floating-point 
*********************************************************************
Document:CACM-1459

requirements for real-time LANGUAGES 
real-time LANGUAGES have different requirements 
from other programming LANGUAGES because OF 
*********************************************************************
Document:CACM-1466

discussion summary on graphical LANGUAGES 
cacm march, 1966 
ca660306 jb march 3, 1978 1:46 pm 
*********************************************************************
Document:CACM-2254

dynamic partitioning for array LANGUAGES 
the value OF partitioning for array LANGUAGES. 
detail to be OF value IN the design OF other array LANGUAGES. 
*********************************************************************
Document:CACM-1350

gs can be constructed, which generates the same LANGUAGES 
y(i) are INTERMEDIATE symbols and c a terminal 
algorithm for arbitrary context-free LANGUAGES is compared 
the augmented predictive analyzer for context-free 
*********************************************************************
Document:CACM-1102

mechanical LANGUAGES: a course specification 
cacm april, 1964 
gorn, s. 
*********************************************************************
Document:CACM-2138

specific machine (the pdp-10): COMPILERS, operating 
programming LANGUAGES, implementation language, 
bliss: a language for systems programming 
*********************************************************************
Document:CACM-2873

user oriented LANGUAGES. lg has been specifically designed 
interactive programming, problem oriented LANGUAGES, 
lg: a language for analytic geometry 
*********************************************************************
Document:CACM-2652

programming LANGUAGES tailored to particular 
design OF programming LANGUAGES, language contraction, 
reduction OF compilation costs through language contraction 
*********************************************************************
Document:CACM-1923

level LANGUAGES using basic input/output support 
high level LANGUAGES, command language 
pseudofiles 
*********************************************************************
Document:CACM-2111

to COMPILERS and operating systems. these include the use OF syntax 
spelling correction, error correction, debugging, COMPILERS, 
spelling correction IN systems programs 
*********************************************************************
Document:CACM-2929

program optimization, COMPILERS, structured 
programming LANGUAGES, run-time statistics 
an analysis OF inline substitution for a structured programming language 
*********************************************************************
Document:CACM-0628

for use with algorithmic LANGUAGES 
on a floating-point number representation 
cacm march, 1962 
*********************************************************************
Document:CACM-3124

CONSTRUCTION OF data-driven algorithms. 
recursive data structures IN apl 
a mathematical study OF three approaches for defining nested 
*********************************************************************
Document:CACM-1098

a comparison OF list-processing computer LANGUAGES 
programming LANGUAGES which, among them, exhibit all the 
LANGUAGES. important common features OF list-processing 
LANGUAGES are reviewed: forms OF data structures 
*********************************************************************
Document:CACM-2718

translation, nonprocedural LANGUAGES 
a preliminary system for the design OF dbtg data structures 
the functional approach to database design is 
*********************************************************************
Document:CACM-1135

preparation OF loading-speed COMPILERS which translate the 
IN the LANGUAGES, as opposed to emphasizing 
OF other business-oriented LANGUAGES and fully meets 
the requirements set by codasyl for such LANGUAGES, 
*********************************************************************
Document:CACM-1007

extension OF existing COMPILERS by sophisticated use OF macros 
a description is presented OF an application 
IN which macros and string concatenation were 
*********************************************************************
Document:CACM-2708

parsing, simple precedence, COMPILERS, debugging 
practical syntactic error recovery 
this paper describes a recovery scheme for syntax 
*********************************************************************
Document:CACM-1988

such as compiler-compilers or extendible LANGUAGES. 
a formalism for translator interactions 
a formalism is presented for describing the actions 
*********************************************************************
Document:CACM-1366

technique and comparison OF LANGUAGES 
OF some computer simulation LANGUAGES 
must choose from available LANGUAGES or write their 
LANGUAGES are being developed: comparisons and 
*********************************************************************
Document:CACM-2295

programming primitives, programming LANGUAGES, 
OF programming LANGUAGES, data structures 
comment on the composition OF semantics IN algol 68 
*********************************************************************
Document:CACM-1062

for INTERMEDIATE manipulations, which are performed 
symbol manipulation IN fortran-sasp i subroutines 
a set OF subroutines for use IN fortran are 
*********************************************************************
Document:CACM-2542

software evaluation, COMPILERS, system programming, 
a software design and evaluation system 
a critical failure OF current software system 
*********************************************************************
Document:CACM-2661

education, programming LANGUAGES, simulators 
ideal teaching machines-a solution to the pedagogic language problem 
cacm april, 1974 
*********************************************************************
Document:CACM-0857

sorting nonredundant files-techniques USED IN the fact compiler 
some typical file structures, including some 
called "non-redundant," are examined,and the 
*********************************************************************
Document:CACM-2470

into LANGUAGES through the mechanism OF singleton 
LANGUAGES, data types, modes, axioms, correctness, 
description LANGUAGES, models OF computation 
fen-an axiomatic basis for program semantics 
*********************************************************************
Document:CACM-1392

INTERMEDIATE expression swell IN order to minimize 
experience with formac algorithm design 
various facets OF the design and implementation 
*********************************************************************
Document:CACM-2449

IN a nondeterministic manner IN pl/i and cobol COMPILERS. 
a simple technique for structured variable lookup 
a simple technique for the symbol-table lookup 
*********************************************************************
Document:CACM-2423

a parser-generating system for constructing compressed COMPILERS 
program. typical one-pass COMPILERS constructed by the 
this paper describes a parser-generating system 
*********************************************************************
Document:CACM-1869

programming LANGUAGES have included explicit 
addressing is USED, as IN snobol, naming constraints 
block structures, indirect addressing, and garbage collection 
*********************************************************************
Document:CACM-2705

programming LANGUAGES, natural LANGUAGES, and mathematics 
mathematics and natural LANGUAGES. the split between 
IN programming. the development OF natural LANGUAGES toward 
OF the history OF artificial, auxiliary LANGUAGES it 
*********************************************************************
Document:CACM-1703

accommodating standards and identification OF programming LANGUAGES 
reliable identification OF programming LANGUAGES 
interactive language, and its related family OF LANGUAGES. 
to other programming LANGUAGES and computer services. 
*********************************************************************
Document:CACM-2064

standard features OF most COMPILERS today. the elements OF such structures are 
storage control, subscripting, COMPILERS 
operations on generalized arrays with the genie compiler 
*********************************************************************
Document:CACM-1678

automata, formal LANGUAGES, abstract switching, 
describe as automata, formal LANGUAGES, abstract 
science program, automata, formal LANGUAGES, 
and computability IN a ph. computer science 
*********************************************************************
Document:CACM-2317

programming systems and LANGUAGES 1965-1975 
and cobol remain the LANGUAGES IN which most 
and IN extensible LANGUAGES, but so far at least 
LANGUAGES may very well become the most important 
*********************************************************************
Document:CACM-2424

CONSTRUCTION OF an operating system which does not make certain 
dynamic verification OF operating system decisions 
dynamic verification OF a decision implies 
*********************************************************************
Document:CACM-0070

CONSTRUCTION OF a set OF test matrices 
this paper develops the equations and properties 
OF a set OF test matrices which are useful 
*********************************************************************
Document:CACM-1456

other list processing LANGUAGES are ideally suited for 
storage and retrieval OF aspects OF meaning IN directed graph structures 
an experimental system that uses lisp to make 
*********************************************************************
Document:CACM-1658

over several test problems OF small and INTERMEDIATE 
analysis OF algorithms for the zero-one programming problem 
this paper is concerned with a review and examination 
*********************************************************************
Document:CACM-2406

most data definition LANGUAGES concentrate on the declaration 
data definition LANGUAGES which describe both the logical 
apparent. such LANGUAGES will be a key systems, as well 
"generalized" data definition LANGUAGES are also 
*********************************************************************
Document:CACM-1162

LANGUAGES generally provide a one-for-one translation 
an assembly language for reprogramming 
complete reprogramming OF compiler language programs 
*********************************************************************
Document:CACM-2710

LANGUAGES based on the relational calculus. facilities 
database, data sublanguages, relations, query LANGUAGES, 
LANGUAGES, relational completeness 
specifying queries as relational expressions: 
*********************************************************************
